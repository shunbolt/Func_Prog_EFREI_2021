[2020-03-11 15:00:54,111] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@66d3c617, name=log4j:logger=kafka.controller (kafka.controller)
[2020-03-11 15:01:30,043] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-03-11 15:01:30,095] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 1 and epoch zk version is now 1 (kafka.controller.KafkaController)
[2020-03-11 15:01:30,096] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2020-03-11 15:01:30,104] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2020-03-11 15:01:30,113] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2020-03-11 15:01:30,116] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2020-03-11 15:01:30,177] INFO [Controller id=0] Initialized broker epochs cache: Map(0 -> 24) (kafka.controller.KafkaController)
[2020-03-11 15:01:30,184] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2020-03-11 15:01:30,201] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2020-03-11 15:01:30,219] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2020-03-11 15:01:30,220] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2020-03-11 15:01:30,221] INFO [Controller id=0] Currently shutting brokers in the cluster: Set() (kafka.controller.KafkaController)
[2020-03-11 15:01:30,222] INFO [Controller id=0] Current list of topics in the cluster: Set() (kafka.controller.KafkaController)
[2020-03-11 15:01:30,223] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2020-03-11 15:01:30,230] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2020-03-11 15:01:30,231] INFO [Controller id=0] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2020-03-11 15:01:30,231] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2020-03-11 15:01:30,233] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(), initial ineligible deletions: Set() (kafka.controller.TopicDeletionManager)
[2020-03-11 15:01:30,235] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2020-03-11 15:01:30,254] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2020-03-11 15:01:30,256] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-03-11 15:01:30,280] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-03-11 15:01:30,281] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> Map() (kafka.controller.ZkReplicaStateMachine)
[2020-03-11 15:01:30,283] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2020-03-11 15:01:30,284] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2020-03-11 15:01:30,294] INFO [RequestSendThread controllerId=0] Controller 0 connected to x240:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-03-11 15:01:30,302] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> Map() (kafka.controller.ZkPartitionStateMachine)
[2020-03-11 15:01:30,303] INFO [Controller id=0] Ready to serve as the new controller with epoch 1 (kafka.controller.KafkaController)
[2020-03-11 15:01:30,316] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2020-03-11 15:01:30,316] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2020-03-11 15:01:30,317] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2020-03-11 15:01:30,318] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2020-03-11 15:01:30,321] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2020-03-11 15:01:30,352] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2020-03-11 15:01:35,355] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-03-11 15:01:35,356] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-03-11 15:01:35,361] DEBUG [Controller id=0] Preferred replicas by broker Map() (kafka.controller.KafkaController)
[2020-03-11 15:01:54,709] INFO [Controller id=0] New topics: [Set(test)], deleted topics: [Set()], new partition replica assignment [Map(test-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2020-03-11 15:01:54,710] INFO [Controller id=0] New partition creation callback for test-0 (kafka.controller.KafkaController)
[2020-03-11 15:02:54,153] INFO [Controller id=0] New topics: [Set(__consumer_offsets)], deleted topics: [Set()], new partition replica assignment [Map(__consumer_offsets-22 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-30 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-8 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-21 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-4 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-27 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-7 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-9 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-46 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-25 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-35 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-41 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-33 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-23 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-49 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-47 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-16 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-28 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-31 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-36 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-42 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-3 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-18 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-37 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-15 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-24 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-38 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-17 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-48 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-19 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-11 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-13 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-2 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-43 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-6 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-14 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-20 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-44 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-39 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-12 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-45 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-1 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-5 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-26 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-29 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-34 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-10 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-32 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-40 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2020-03-11 15:02:54,153] INFO [Controller id=0] New partition creation callback for __consumer_offsets-22,__consumer_offsets-30,__consumer_offsets-8,__consumer_offsets-21,__consumer_offsets-4,__consumer_offsets-27,__consumer_offsets-7,__consumer_offsets-9,__consumer_offsets-46,__consumer_offsets-25,__consumer_offsets-35,__consumer_offsets-41,__consumer_offsets-33,__consumer_offsets-23,__consumer_offsets-49,__consumer_offsets-47,__consumer_offsets-16,__consumer_offsets-28,__consumer_offsets-31,__consumer_offsets-36,__consumer_offsets-42,__consumer_offsets-3,__consumer_offsets-18,__consumer_offsets-37,__consumer_offsets-15,__consumer_offsets-24,__consumer_offsets-38,__consumer_offsets-17,__consumer_offsets-48,__consumer_offsets-19,__consumer_offsets-11,__consumer_offsets-13,__consumer_offsets-2,__consumer_offsets-43,__consumer_offsets-6,__consumer_offsets-14,__consumer_offsets-20,__consumer_offsets-0,__consumer_offsets-44,__consumer_offsets-39,__consumer_offsets-12,__consumer_offsets-45,__consumer_offsets-1,__consumer_offsets-5,__consumer_offsets-26,__consumer_offsets-29,__consumer_offsets-34,__consumer_offsets-10,__consumer_offsets-32,__consumer_offsets-40 (kafka.controller.KafkaController)
[2020-03-11 15:06:35,363] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-03-11 15:06:35,363] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-03-11 15:06:35,369] DEBUG [Controller id=0] Preferred replicas by broker Map(0 -> Map(__consumer_offsets-22 -> Vector(0), __consumer_offsets-30 -> Vector(0), __consumer_offsets-8 -> Vector(0), __consumer_offsets-21 -> Vector(0), __consumer_offsets-4 -> Vector(0), __consumer_offsets-27 -> Vector(0), __consumer_offsets-7 -> Vector(0), __consumer_offsets-9 -> Vector(0), __consumer_offsets-46 -> Vector(0), __consumer_offsets-25 -> Vector(0), __consumer_offsets-35 -> Vector(0), __consumer_offsets-41 -> Vector(0), __consumer_offsets-33 -> Vector(0), __consumer_offsets-23 -> Vector(0), __consumer_offsets-49 -> Vector(0), __consumer_offsets-47 -> Vector(0), __consumer_offsets-16 -> Vector(0), test-0 -> Vector(0), __consumer_offsets-28 -> Vector(0), __consumer_offsets-31 -> Vector(0), __consumer_offsets-36 -> Vector(0), __consumer_offsets-42 -> Vector(0), __consumer_offsets-3 -> Vector(0), __consumer_offsets-18 -> Vector(0), __consumer_offsets-37 -> Vector(0), __consumer_offsets-15 -> Vector(0), __consumer_offsets-24 -> Vector(0), __consumer_offsets-38 -> Vector(0), __consumer_offsets-17 -> Vector(0), __consumer_offsets-48 -> Vector(0), __consumer_offsets-19 -> Vector(0), __consumer_offsets-11 -> Vector(0), __consumer_offsets-13 -> Vector(0), __consumer_offsets-2 -> Vector(0), __consumer_offsets-43 -> Vector(0), __consumer_offsets-6 -> Vector(0), __consumer_offsets-14 -> Vector(0), __consumer_offsets-20 -> Vector(0), __consumer_offsets-0 -> Vector(0), __consumer_offsets-44 -> Vector(0), __consumer_offsets-39 -> Vector(0), __consumer_offsets-12 -> Vector(0), __consumer_offsets-45 -> Vector(0), __consumer_offsets-1 -> Vector(0), __consumer_offsets-5 -> Vector(0), __consumer_offsets-26 -> Vector(0), __consumer_offsets-29 -> Vector(0), __consumer_offsets-34 -> Vector(0), __consumer_offsets-10 -> Vector(0), __consumer_offsets-32 -> Vector(0), __consumer_offsets-40 -> Vector(0))) (kafka.controller.KafkaController)
[2020-03-11 15:06:35,372] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-03-11 15:06:35,375] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-03-11 15:11:35,375] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-03-11 15:11:35,375] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-03-11 15:11:35,380] DEBUG [Controller id=0] Preferred replicas by broker Map(0 -> Map(__consumer_offsets-22 -> Vector(0), __consumer_offsets-30 -> Vector(0), __consumer_offsets-8 -> Vector(0), __consumer_offsets-21 -> Vector(0), __consumer_offsets-4 -> Vector(0), __consumer_offsets-27 -> Vector(0), __consumer_offsets-7 -> Vector(0), __consumer_offsets-9 -> Vector(0), __consumer_offsets-46 -> Vector(0), __consumer_offsets-25 -> Vector(0), __consumer_offsets-35 -> Vector(0), __consumer_offsets-41 -> Vector(0), __consumer_offsets-33 -> Vector(0), __consumer_offsets-23 -> Vector(0), __consumer_offsets-49 -> Vector(0), __consumer_offsets-47 -> Vector(0), __consumer_offsets-16 -> Vector(0), test-0 -> Vector(0), __consumer_offsets-28 -> Vector(0), __consumer_offsets-31 -> Vector(0), __consumer_offsets-36 -> Vector(0), __consumer_offsets-42 -> Vector(0), __consumer_offsets-3 -> Vector(0), __consumer_offsets-18 -> Vector(0), __consumer_offsets-37 -> Vector(0), __consumer_offsets-15 -> Vector(0), __consumer_offsets-24 -> Vector(0), __consumer_offsets-38 -> Vector(0), __consumer_offsets-17 -> Vector(0), __consumer_offsets-48 -> Vector(0), __consumer_offsets-19 -> Vector(0), __consumer_offsets-11 -> Vector(0), __consumer_offsets-13 -> Vector(0), __consumer_offsets-2 -> Vector(0), __consumer_offsets-43 -> Vector(0), __consumer_offsets-6 -> Vector(0), __consumer_offsets-14 -> Vector(0), __consumer_offsets-20 -> Vector(0), __consumer_offsets-0 -> Vector(0), __consumer_offsets-44 -> Vector(0), __consumer_offsets-39 -> Vector(0), __consumer_offsets-12 -> Vector(0), __consumer_offsets-45 -> Vector(0), __consumer_offsets-1 -> Vector(0), __consumer_offsets-5 -> Vector(0), __consumer_offsets-26 -> Vector(0), __consumer_offsets-29 -> Vector(0), __consumer_offsets-34 -> Vector(0), __consumer_offsets-10 -> Vector(0), __consumer_offsets-32 -> Vector(0), __consumer_offsets-40 -> Vector(0))) (kafka.controller.KafkaController)
[2020-03-11 15:11:35,381] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-03-11 15:11:35,381] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-03-11 15:14:05,412] INFO [Controller id=0] Newly added brokers: 1, deleted brokers: , bounced brokers: , all live brokers: 0,1 (kafka.controller.KafkaController)
[2020-03-11 15:14:05,413] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2020-03-11 15:14:05,419] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2020-03-11 15:14:05,422] INFO [Controller id=0] New broker startup callback for 1 (kafka.controller.KafkaController)
[2020-03-11 15:14:05,426] INFO [RequestSendThread controllerId=0] Controller 0 connected to x240:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-03-11 15:14:05,436] DEBUG [Controller id=0] Register BrokerModifications handler for Vector(1) (kafka.controller.KafkaController)
[2020-03-11 15:14:05,439] INFO [Controller id=0] Updated broker epochs cache: Map(0 -> 24, 1 -> 183) (kafka.controller.KafkaController)
[2020-03-11 15:14:05,447] INFO [RequestSendThread controllerId=0] Controller 0 connected to x240:9093 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-03-11 15:14:05,522] INFO [ControllerEventThread controllerId=1] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-03-11 15:14:05,546] DEBUG [Controller id=1] Broker 0 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2020-03-11 15:14:27,139] INFO [Controller id=0] Newly added brokers: 2, deleted brokers: , bounced brokers: , all live brokers: 0,1,2 (kafka.controller.KafkaController)
[2020-03-11 15:14:27,139] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 2 (kafka.controller.ControllerChannelManager)
[2020-03-11 15:14:27,152] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2020-03-11 15:14:27,152] INFO [Controller id=0] New broker startup callback for 2 (kafka.controller.KafkaController)
[2020-03-11 15:14:27,170] INFO [RequestSendThread controllerId=0] Controller 0 connected to x240:9094 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-03-11 15:14:27,181] DEBUG [Controller id=0] Register BrokerModifications handler for Vector(2) (kafka.controller.KafkaController)
[2020-03-11 15:14:27,185] INFO [Controller id=0] Updated broker epochs cache: Map(0 -> 24, 1 -> 183, 2 -> 199) (kafka.controller.KafkaController)
[2020-03-11 15:14:27,268] INFO [ControllerEventThread controllerId=2] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-03-11 15:14:27,289] DEBUG [Controller id=2] Broker 0 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2020-03-11 15:14:50,830] INFO [Controller id=0] New topics: [Set(my-replicated-topic)], deleted topics: [Set()], new partition replica assignment [Map(my-replicated-topic-0 -> ReplicaAssignment(replicas=2,1,0, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2020-03-11 15:14:50,830] INFO [Controller id=0] New partition creation callback for my-replicated-topic-0 (kafka.controller.KafkaController)
[2020-03-11 15:16:35,381] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-03-11 15:16:35,382] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-03-11 15:16:35,388] DEBUG [Controller id=0] Preferred replicas by broker Map(2 -> Map(my-replicated-topic-0 -> Vector(2, 1, 0)), 0 -> Map(__consumer_offsets-22 -> Vector(0), __consumer_offsets-30 -> Vector(0), __consumer_offsets-8 -> Vector(0), __consumer_offsets-21 -> Vector(0), __consumer_offsets-4 -> Vector(0), __consumer_offsets-27 -> Vector(0), __consumer_offsets-7 -> Vector(0), __consumer_offsets-9 -> Vector(0), __consumer_offsets-46 -> Vector(0), __consumer_offsets-25 -> Vector(0), __consumer_offsets-35 -> Vector(0), __consumer_offsets-41 -> Vector(0), __consumer_offsets-33 -> Vector(0), __consumer_offsets-23 -> Vector(0), __consumer_offsets-49 -> Vector(0), __consumer_offsets-47 -> Vector(0), __consumer_offsets-16 -> Vector(0), test-0 -> Vector(0), __consumer_offsets-28 -> Vector(0), __consumer_offsets-31 -> Vector(0), __consumer_offsets-36 -> Vector(0), __consumer_offsets-42 -> Vector(0), __consumer_offsets-3 -> Vector(0), __consumer_offsets-18 -> Vector(0), __consumer_offsets-37 -> Vector(0), __consumer_offsets-15 -> Vector(0), __consumer_offsets-24 -> Vector(0), __consumer_offsets-38 -> Vector(0), __consumer_offsets-17 -> Vector(0), __consumer_offsets-48 -> Vector(0), __consumer_offsets-19 -> Vector(0), __consumer_offsets-11 -> Vector(0), __consumer_offsets-13 -> Vector(0), __consumer_offsets-2 -> Vector(0), __consumer_offsets-43 -> Vector(0), __consumer_offsets-6 -> Vector(0), __consumer_offsets-14 -> Vector(0), __consumer_offsets-20 -> Vector(0), __consumer_offsets-0 -> Vector(0), __consumer_offsets-44 -> Vector(0), __consumer_offsets-39 -> Vector(0), __consumer_offsets-12 -> Vector(0), __consumer_offsets-45 -> Vector(0), __consumer_offsets-1 -> Vector(0), __consumer_offsets-5 -> Vector(0), __consumer_offsets-26 -> Vector(0), __consumer_offsets-29 -> Vector(0), __consumer_offsets-34 -> Vector(0), __consumer_offsets-10 -> Vector(0), __consumer_offsets-32 -> Vector(0), __consumer_offsets-40 -> Vector(0))) (kafka.controller.KafkaController)
[2020-03-11 15:16:35,388] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2020-03-11 15:16:35,389] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2020-03-11 15:16:35,389] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-03-11 15:16:35,389] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-03-11 15:20:04,180] INFO [Controller id=0] Newly added brokers: , deleted brokers: 1, bounced brokers: , all live brokers: 0,2 (kafka.controller.KafkaController)
[2020-03-11 15:20:04,182] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2020-03-11 15:20:04,183] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2020-03-11 15:20:04,183] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2020-03-11 15:20:04,189] INFO [Controller id=0] Broker failure callback for 1 (kafka.controller.KafkaController)
[2020-03-11 15:20:04,230] DEBUG [Controller id=0] Unregister BrokerModifications handler for Vector(1) (kafka.controller.KafkaController)
[2020-03-11 15:20:04,232] INFO [Controller id=0] Updated broker epochs cache: Map(0 -> 24, 2 -> 199) (kafka.controller.KafkaController)
[2020-03-11 15:21:35,390] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-03-11 15:21:35,390] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-03-11 15:21:35,393] DEBUG [Controller id=0] Preferred replicas by broker Map(2 -> Map(my-replicated-topic-0 -> Vector(2, 1, 0)), 0 -> Map(__consumer_offsets-22 -> Vector(0), __consumer_offsets-30 -> Vector(0), __consumer_offsets-8 -> Vector(0), __consumer_offsets-21 -> Vector(0), __consumer_offsets-4 -> Vector(0), __consumer_offsets-27 -> Vector(0), __consumer_offsets-7 -> Vector(0), __consumer_offsets-9 -> Vector(0), __consumer_offsets-46 -> Vector(0), __consumer_offsets-25 -> Vector(0), __consumer_offsets-35 -> Vector(0), __consumer_offsets-41 -> Vector(0), __consumer_offsets-33 -> Vector(0), __consumer_offsets-23 -> Vector(0), __consumer_offsets-49 -> Vector(0), __consumer_offsets-47 -> Vector(0), __consumer_offsets-16 -> Vector(0), test-0 -> Vector(0), __consumer_offsets-28 -> Vector(0), __consumer_offsets-31 -> Vector(0), __consumer_offsets-36 -> Vector(0), __consumer_offsets-42 -> Vector(0), __consumer_offsets-3 -> Vector(0), __consumer_offsets-18 -> Vector(0), __consumer_offsets-37 -> Vector(0), __consumer_offsets-15 -> Vector(0), __consumer_offsets-24 -> Vector(0), __consumer_offsets-38 -> Vector(0), __consumer_offsets-17 -> Vector(0), __consumer_offsets-48 -> Vector(0), __consumer_offsets-19 -> Vector(0), __consumer_offsets-11 -> Vector(0), __consumer_offsets-13 -> Vector(0), __consumer_offsets-2 -> Vector(0), __consumer_offsets-43 -> Vector(0), __consumer_offsets-6 -> Vector(0), __consumer_offsets-14 -> Vector(0), __consumer_offsets-20 -> Vector(0), __consumer_offsets-0 -> Vector(0), __consumer_offsets-44 -> Vector(0), __consumer_offsets-39 -> Vector(0), __consumer_offsets-12 -> Vector(0), __consumer_offsets-45 -> Vector(0), __consumer_offsets-1 -> Vector(0), __consumer_offsets-5 -> Vector(0), __consumer_offsets-26 -> Vector(0), __consumer_offsets-29 -> Vector(0), __consumer_offsets-34 -> Vector(0), __consumer_offsets-10 -> Vector(0), __consumer_offsets-32 -> Vector(0), __consumer_offsets-40 -> Vector(0))) (kafka.controller.KafkaController)
[2020-03-11 15:21:35,393] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2020-03-11 15:21:35,393] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2020-03-11 15:21:35,394] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-03-11 15:21:35,394] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-03-11 15:25:49,660] INFO [Controller id=0] New topics: [Set(connect-test)], deleted topics: [Set()], new partition replica assignment [Map(connect-test-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2020-03-11 15:25:49,660] INFO [Controller id=0] New partition creation callback for connect-test-0 (kafka.controller.KafkaController)
[2020-03-11 15:26:35,394] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-03-11 15:26:35,395] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-03-11 15:26:35,397] DEBUG [Controller id=0] Preferred replicas by broker Map(2 -> Map(my-replicated-topic-0 -> Vector(2, 1, 0)), 0 -> Map(__consumer_offsets-22 -> Vector(0), __consumer_offsets-30 -> Vector(0), __consumer_offsets-8 -> Vector(0), __consumer_offsets-21 -> Vector(0), __consumer_offsets-4 -> Vector(0), __consumer_offsets-27 -> Vector(0), __consumer_offsets-7 -> Vector(0), __consumer_offsets-9 -> Vector(0), __consumer_offsets-46 -> Vector(0), __consumer_offsets-25 -> Vector(0), __consumer_offsets-35 -> Vector(0), __consumer_offsets-41 -> Vector(0), __consumer_offsets-33 -> Vector(0), __consumer_offsets-23 -> Vector(0), __consumer_offsets-49 -> Vector(0), __consumer_offsets-47 -> Vector(0), __consumer_offsets-16 -> Vector(0), test-0 -> Vector(0), __consumer_offsets-28 -> Vector(0), __consumer_offsets-31 -> Vector(0), __consumer_offsets-36 -> Vector(0), __consumer_offsets-42 -> Vector(0), connect-test-0 -> Vector(0), __consumer_offsets-3 -> Vector(0), __consumer_offsets-18 -> Vector(0), __consumer_offsets-37 -> Vector(0), __consumer_offsets-15 -> Vector(0), __consumer_offsets-24 -> Vector(0), __consumer_offsets-38 -> Vector(0), __consumer_offsets-17 -> Vector(0), __consumer_offsets-48 -> Vector(0), __consumer_offsets-19 -> Vector(0), __consumer_offsets-11 -> Vector(0), __consumer_offsets-13 -> Vector(0), __consumer_offsets-2 -> Vector(0), __consumer_offsets-43 -> Vector(0), __consumer_offsets-6 -> Vector(0), __consumer_offsets-14 -> Vector(0), __consumer_offsets-20 -> Vector(0), __consumer_offsets-0 -> Vector(0), __consumer_offsets-44 -> Vector(0), __consumer_offsets-39 -> Vector(0), __consumer_offsets-12 -> Vector(0), __consumer_offsets-45 -> Vector(0), __consumer_offsets-1 -> Vector(0), __consumer_offsets-5 -> Vector(0), __consumer_offsets-26 -> Vector(0), __consumer_offsets-29 -> Vector(0), __consumer_offsets-34 -> Vector(0), __consumer_offsets-10 -> Vector(0), __consumer_offsets-32 -> Vector(0), __consumer_offsets-40 -> Vector(0))) (kafka.controller.KafkaController)
[2020-03-11 15:26:35,398] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2020-03-11 15:26:35,398] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2020-03-11 15:26:35,398] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-03-11 15:26:35,398] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-03-11 15:31:35,399] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-03-11 15:31:35,399] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-03-11 15:31:35,402] DEBUG [Controller id=0] Preferred replicas by broker Map(2 -> Map(my-replicated-topic-0 -> Vector(2, 1, 0)), 0 -> Map(__consumer_offsets-22 -> Vector(0), __consumer_offsets-30 -> Vector(0), __consumer_offsets-8 -> Vector(0), __consumer_offsets-21 -> Vector(0), __consumer_offsets-4 -> Vector(0), __consumer_offsets-27 -> Vector(0), __consumer_offsets-7 -> Vector(0), __consumer_offsets-9 -> Vector(0), __consumer_offsets-46 -> Vector(0), __consumer_offsets-25 -> Vector(0), __consumer_offsets-35 -> Vector(0), __consumer_offsets-41 -> Vector(0), __consumer_offsets-33 -> Vector(0), __consumer_offsets-23 -> Vector(0), __consumer_offsets-49 -> Vector(0), __consumer_offsets-47 -> Vector(0), __consumer_offsets-16 -> Vector(0), test-0 -> Vector(0), __consumer_offsets-28 -> Vector(0), __consumer_offsets-31 -> Vector(0), __consumer_offsets-36 -> Vector(0), __consumer_offsets-42 -> Vector(0), connect-test-0 -> Vector(0), __consumer_offsets-3 -> Vector(0), __consumer_offsets-18 -> Vector(0), __consumer_offsets-37 -> Vector(0), __consumer_offsets-15 -> Vector(0), __consumer_offsets-24 -> Vector(0), __consumer_offsets-38 -> Vector(0), __consumer_offsets-17 -> Vector(0), __consumer_offsets-48 -> Vector(0), __consumer_offsets-19 -> Vector(0), __consumer_offsets-11 -> Vector(0), __consumer_offsets-13 -> Vector(0), __consumer_offsets-2 -> Vector(0), __consumer_offsets-43 -> Vector(0), __consumer_offsets-6 -> Vector(0), __consumer_offsets-14 -> Vector(0), __consumer_offsets-20 -> Vector(0), __consumer_offsets-0 -> Vector(0), __consumer_offsets-44 -> Vector(0), __consumer_offsets-39 -> Vector(0), __consumer_offsets-12 -> Vector(0), __consumer_offsets-45 -> Vector(0), __consumer_offsets-1 -> Vector(0), __consumer_offsets-5 -> Vector(0), __consumer_offsets-26 -> Vector(0), __consumer_offsets-29 -> Vector(0), __consumer_offsets-34 -> Vector(0), __consumer_offsets-10 -> Vector(0), __consumer_offsets-32 -> Vector(0), __consumer_offsets-40 -> Vector(0))) (kafka.controller.KafkaController)
[2020-03-11 15:31:35,402] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2020-03-11 15:31:35,402] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2020-03-11 15:31:35,402] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-03-11 15:31:35,402] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-03-11 15:36:35,403] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-03-11 15:36:35,403] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-03-11 15:36:35,406] DEBUG [Controller id=0] Preferred replicas by broker Map(2 -> Map(my-replicated-topic-0 -> Vector(2, 1, 0)), 0 -> Map(__consumer_offsets-22 -> Vector(0), __consumer_offsets-30 -> Vector(0), __consumer_offsets-8 -> Vector(0), __consumer_offsets-21 -> Vector(0), __consumer_offsets-4 -> Vector(0), __consumer_offsets-27 -> Vector(0), __consumer_offsets-7 -> Vector(0), __consumer_offsets-9 -> Vector(0), __consumer_offsets-46 -> Vector(0), __consumer_offsets-25 -> Vector(0), __consumer_offsets-35 -> Vector(0), __consumer_offsets-41 -> Vector(0), __consumer_offsets-33 -> Vector(0), __consumer_offsets-23 -> Vector(0), __consumer_offsets-49 -> Vector(0), __consumer_offsets-47 -> Vector(0), __consumer_offsets-16 -> Vector(0), test-0 -> Vector(0), __consumer_offsets-28 -> Vector(0), __consumer_offsets-31 -> Vector(0), __consumer_offsets-36 -> Vector(0), __consumer_offsets-42 -> Vector(0), connect-test-0 -> Vector(0), __consumer_offsets-3 -> Vector(0), __consumer_offsets-18 -> Vector(0), __consumer_offsets-37 -> Vector(0), __consumer_offsets-15 -> Vector(0), __consumer_offsets-24 -> Vector(0), __consumer_offsets-38 -> Vector(0), __consumer_offsets-17 -> Vector(0), __consumer_offsets-48 -> Vector(0), __consumer_offsets-19 -> Vector(0), __consumer_offsets-11 -> Vector(0), __consumer_offsets-13 -> Vector(0), __consumer_offsets-2 -> Vector(0), __consumer_offsets-43 -> Vector(0), __consumer_offsets-6 -> Vector(0), __consumer_offsets-14 -> Vector(0), __consumer_offsets-20 -> Vector(0), __consumer_offsets-0 -> Vector(0), __consumer_offsets-44 -> Vector(0), __consumer_offsets-39 -> Vector(0), __consumer_offsets-12 -> Vector(0), __consumer_offsets-45 -> Vector(0), __consumer_offsets-1 -> Vector(0), __consumer_offsets-5 -> Vector(0), __consumer_offsets-26 -> Vector(0), __consumer_offsets-29 -> Vector(0), __consumer_offsets-34 -> Vector(0), __consumer_offsets-10 -> Vector(0), __consumer_offsets-32 -> Vector(0), __consumer_offsets-40 -> Vector(0))) (kafka.controller.KafkaController)
[2020-03-11 15:36:35,406] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2020-03-11 15:36:35,406] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2020-03-11 15:36:35,406] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-03-11 15:36:35,406] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-03-11 15:41:35,407] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-03-11 15:41:35,407] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-03-11 15:41:35,409] DEBUG [Controller id=0] Preferred replicas by broker Map(2 -> Map(my-replicated-topic-0 -> Vector(2, 1, 0)), 0 -> Map(__consumer_offsets-22 -> Vector(0), __consumer_offsets-30 -> Vector(0), __consumer_offsets-8 -> Vector(0), __consumer_offsets-21 -> Vector(0), __consumer_offsets-4 -> Vector(0), __consumer_offsets-27 -> Vector(0), __consumer_offsets-7 -> Vector(0), __consumer_offsets-9 -> Vector(0), __consumer_offsets-46 -> Vector(0), __consumer_offsets-25 -> Vector(0), __consumer_offsets-35 -> Vector(0), __consumer_offsets-41 -> Vector(0), __consumer_offsets-33 -> Vector(0), __consumer_offsets-23 -> Vector(0), __consumer_offsets-49 -> Vector(0), __consumer_offsets-47 -> Vector(0), __consumer_offsets-16 -> Vector(0), test-0 -> Vector(0), __consumer_offsets-28 -> Vector(0), __consumer_offsets-31 -> Vector(0), __consumer_offsets-36 -> Vector(0), __consumer_offsets-42 -> Vector(0), connect-test-0 -> Vector(0), __consumer_offsets-3 -> Vector(0), __consumer_offsets-18 -> Vector(0), __consumer_offsets-37 -> Vector(0), __consumer_offsets-15 -> Vector(0), __consumer_offsets-24 -> Vector(0), __consumer_offsets-38 -> Vector(0), __consumer_offsets-17 -> Vector(0), __consumer_offsets-48 -> Vector(0), __consumer_offsets-19 -> Vector(0), __consumer_offsets-11 -> Vector(0), __consumer_offsets-13 -> Vector(0), __consumer_offsets-2 -> Vector(0), __consumer_offsets-43 -> Vector(0), __consumer_offsets-6 -> Vector(0), __consumer_offsets-14 -> Vector(0), __consumer_offsets-20 -> Vector(0), __consumer_offsets-0 -> Vector(0), __consumer_offsets-44 -> Vector(0), __consumer_offsets-39 -> Vector(0), __consumer_offsets-12 -> Vector(0), __consumer_offsets-45 -> Vector(0), __consumer_offsets-1 -> Vector(0), __consumer_offsets-5 -> Vector(0), __consumer_offsets-26 -> Vector(0), __consumer_offsets-29 -> Vector(0), __consumer_offsets-34 -> Vector(0), __consumer_offsets-10 -> Vector(0), __consumer_offsets-32 -> Vector(0), __consumer_offsets-40 -> Vector(0))) (kafka.controller.KafkaController)
[2020-03-11 15:41:35,409] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2020-03-11 15:41:35,409] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2020-03-11 15:41:35,410] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-03-11 15:41:35,410] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-03-11 15:45:49,189] INFO [Controller id=2] 2 successfully elected as the controller. Epoch incremented to 2 and epoch zk version is now 2 (kafka.controller.KafkaController)
[2020-03-11 15:45:49,189] INFO [Controller id=2] Registering handlers (kafka.controller.KafkaController)
[2020-03-11 15:45:49,192] INFO [Controller id=2] Deleting log dir event notifications (kafka.controller.KafkaController)
[2020-03-11 15:45:49,195] INFO [Controller id=2] Deleting isr change notifications (kafka.controller.KafkaController)
[2020-03-11 15:45:49,198] INFO [Controller id=2] Initializing controller context (kafka.controller.KafkaController)
[2020-03-11 15:45:49,204] INFO [Controller id=2] Initialized broker epochs cache: Map(2 -> 199) (kafka.controller.KafkaController)
[2020-03-11 15:45:49,219] DEBUG [Controller id=2] Register BrokerModifications handler for Set(2) (kafka.controller.KafkaController)
[2020-03-11 15:45:49,262] DEBUG [Channel manager on controller 2]: Controller 2 trying to connect to broker 2 (kafka.controller.ControllerChannelManager)
[2020-03-11 15:45:49,270] INFO [RequestSendThread controllerId=2] Starting (kafka.controller.RequestSendThread)
[2020-03-11 15:45:49,271] INFO [Controller id=2] Currently active brokers in the cluster: Set(2) (kafka.controller.KafkaController)
[2020-03-11 15:45:49,271] INFO [Controller id=2] Currently shutting brokers in the cluster: Set() (kafka.controller.KafkaController)
[2020-03-11 15:45:49,272] INFO [Controller id=2] Current list of topics in the cluster: Set(connect-test, test, my-replicated-topic, __consumer_offsets) (kafka.controller.KafkaController)
[2020-03-11 15:45:49,272] INFO [Controller id=2] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2020-03-11 15:45:49,279] INFO [Controller id=2] List of topics to be deleted:  (kafka.controller.KafkaController)
[2020-03-11 15:45:49,280] INFO [Controller id=2] List of topics ineligible for deletion: connect-test,test,my-replicated-topic,__consumer_offsets (kafka.controller.KafkaController)
[2020-03-11 15:45:49,280] INFO [Controller id=2] Initializing topic deletion manager (kafka.controller.KafkaController)
[2020-03-11 15:45:49,281] INFO [Topic Deletion Manager 2] Initializing manager with initial deletions: Set(), initial ineligible deletions: Set(connect-test, test, my-replicated-topic, __consumer_offsets) (kafka.controller.TopicDeletionManager)
[2020-03-11 15:45:49,281] INFO [Controller id=2] Sending update metadata request (kafka.controller.KafkaController)
[2020-03-11 15:45:49,293] INFO [ReplicaStateMachine controllerId=2] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2020-03-11 15:45:49,298] INFO [RequestSendThread controllerId=2] Controller 2 connected to x240:9094 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-03-11 15:45:49,304] INFO [ReplicaStateMachine controllerId=2] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-03-11 15:45:49,332] INFO [ReplicaStateMachine controllerId=2] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-03-11 15:45:49,466] DEBUG [ReplicaStateMachine controllerId=2] Started replica state machine with initial state -> Map([Topic=__consumer_offsets,Partition=21,Replica=0] -> OfflineReplica, [Topic=my-replicated-topic,Partition=0,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=42,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=46,Replica=0] -> OfflineReplica, [Topic=my-replicated-topic,Partition=0,Replica=2] -> OnlineReplica, [Topic=my-replicated-topic,Partition=0,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=39,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=7,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=13,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=49,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=48,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=15,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=38,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=2,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=28,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=23,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=32,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=10,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=18,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=33,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=5,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=17,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=8,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=19,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=37,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=43,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=6,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=9,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=30,Replica=0] -> OfflineReplica, [Topic=connect-test,Partition=0,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=3,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=25,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=47,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=36,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=11,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=34,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=27,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=12,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=44,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=1,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=45,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=24,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=22,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=0,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=31,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=14,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=40,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=4,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=20,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=41,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=26,Replica=0] -> OfflineReplica, [Topic=test,Partition=0,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=29,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=16,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=35,Replica=0] -> OfflineReplica) (kafka.controller.ZkReplicaStateMachine)
[2020-03-11 15:45:49,467] INFO [PartitionStateMachine controllerId=2] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2020-03-11 15:45:49,481] INFO [PartitionStateMachine controllerId=2] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2020-03-11 15:45:49,570] DEBUG [PartitionStateMachine controllerId=2] Started partition state machine with initial state -> Map(__consumer_offsets-49 -> OfflinePartition, __consumer_offsets-38 -> OfflinePartition, __consumer_offsets-16 -> OfflinePartition, __consumer_offsets-27 -> OfflinePartition, __consumer_offsets-8 -> OfflinePartition, __consumer_offsets-19 -> OfflinePartition, __consumer_offsets-13 -> OfflinePartition, __consumer_offsets-2 -> OfflinePartition, __consumer_offsets-46 -> OfflinePartition, __consumer_offsets-35 -> OfflinePartition, __consumer_offsets-24 -> OfflinePartition, __consumer_offsets-5 -> OfflinePartition, __consumer_offsets-43 -> OfflinePartition, __consumer_offsets-32 -> OfflinePartition, __consumer_offsets-21 -> OfflinePartition, __consumer_offsets-10 -> OfflinePartition, __consumer_offsets-37 -> OfflinePartition, my-replicated-topic-0 -> OnlinePartition, __consumer_offsets-48 -> OfflinePartition, __consumer_offsets-40 -> OfflinePartition, __consumer_offsets-18 -> OfflinePartition, __consumer_offsets-29 -> OfflinePartition, __consumer_offsets-7 -> OfflinePartition, __consumer_offsets-34 -> OfflinePartition, __consumer_offsets-23 -> OfflinePartition, __consumer_offsets-45 -> OfflinePartition, __consumer_offsets-26 -> OfflinePartition, __consumer_offsets-4 -> OfflinePartition, __consumer_offsets-15 -> OfflinePartition, __consumer_offsets-42 -> OfflinePartition, __consumer_offsets-31 -> OfflinePartition, __consumer_offsets-9 -> OfflinePartition, __consumer_offsets-20 -> OfflinePartition, test-0 -> OfflinePartition, __consumer_offsets-12 -> OfflinePartition, __consumer_offsets-1 -> OfflinePartition, __consumer_offsets-28 -> OfflinePartition, __consumer_offsets-17 -> OfflinePartition, __consumer_offsets-6 -> OfflinePartition, __consumer_offsets-39 -> OfflinePartition, __consumer_offsets-44 -> OfflinePartition, __consumer_offsets-36 -> OfflinePartition, __consumer_offsets-47 -> OfflinePartition, __consumer_offsets-3 -> OfflinePartition, __consumer_offsets-25 -> OfflinePartition, __consumer_offsets-14 -> OfflinePartition, __consumer_offsets-30 -> OfflinePartition, __consumer_offsets-41 -> OfflinePartition, connect-test-0 -> OfflinePartition, __consumer_offsets-33 -> OfflinePartition, __consumer_offsets-22 -> OfflinePartition, __consumer_offsets-11 -> OfflinePartition, __consumer_offsets-0 -> OfflinePartition) (kafka.controller.ZkPartitionStateMachine)
[2020-03-11 15:45:49,571] INFO [Controller id=2] Ready to serve as the new controller with epoch 2 (kafka.controller.KafkaController)
[2020-03-11 15:45:49,576] INFO [Controller id=2] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2020-03-11 15:45:49,576] INFO [Controller id=2] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2020-03-11 15:45:49,576] INFO [Controller id=2] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2020-03-11 15:45:49,577] INFO [Controller id=2] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2020-03-11 15:45:49,578] INFO [Controller id=2] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2020-03-11 15:45:49,596] INFO [Controller id=2] Starting the controller scheduler (kafka.controller.KafkaController)
[2020-03-11 15:45:54,599] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-03-11 15:45:54,600] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-03-11 15:45:54,616] DEBUG [Controller id=2] Preferred replicas by broker Map(2 -> Map(my-replicated-topic-0 -> Vector(2, 1, 0)), 0 -> Map(__consumer_offsets-22 -> Vector(0), __consumer_offsets-30 -> Vector(0), __consumer_offsets-8 -> Vector(0), __consumer_offsets-21 -> Vector(0), __consumer_offsets-4 -> Vector(0), __consumer_offsets-27 -> Vector(0), __consumer_offsets-7 -> Vector(0), __consumer_offsets-9 -> Vector(0), __consumer_offsets-46 -> Vector(0), __consumer_offsets-25 -> Vector(0), __consumer_offsets-35 -> Vector(0), __consumer_offsets-41 -> Vector(0), __consumer_offsets-33 -> Vector(0), __consumer_offsets-23 -> Vector(0), __consumer_offsets-49 -> Vector(0), __consumer_offsets-47 -> Vector(0), __consumer_offsets-16 -> Vector(0), test-0 -> Vector(0), __consumer_offsets-28 -> Vector(0), __consumer_offsets-31 -> Vector(0), __consumer_offsets-36 -> Vector(0), __consumer_offsets-42 -> Vector(0), connect-test-0 -> Vector(0), __consumer_offsets-3 -> Vector(0), __consumer_offsets-18 -> Vector(0), __consumer_offsets-37 -> Vector(0), __consumer_offsets-15 -> Vector(0), __consumer_offsets-24 -> Vector(0), __consumer_offsets-38 -> Vector(0), __consumer_offsets-17 -> Vector(0), __consumer_offsets-48 -> Vector(0), __consumer_offsets-19 -> Vector(0), __consumer_offsets-11 -> Vector(0), __consumer_offsets-13 -> Vector(0), __consumer_offsets-2 -> Vector(0), __consumer_offsets-43 -> Vector(0), __consumer_offsets-6 -> Vector(0), __consumer_offsets-14 -> Vector(0), __consumer_offsets-20 -> Vector(0), __consumer_offsets-0 -> Vector(0), __consumer_offsets-44 -> Vector(0), __consumer_offsets-39 -> Vector(0), __consumer_offsets-12 -> Vector(0), __consumer_offsets-45 -> Vector(0), __consumer_offsets-1 -> Vector(0), __consumer_offsets-5 -> Vector(0), __consumer_offsets-26 -> Vector(0), __consumer_offsets-29 -> Vector(0), __consumer_offsets-34 -> Vector(0), __consumer_offsets-10 -> Vector(0), __consumer_offsets-32 -> Vector(0), __consumer_offsets-40 -> Vector(0))) (kafka.controller.KafkaController)
[2020-03-11 15:45:54,618] DEBUG [Controller id=2] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2020-03-11 15:45:54,619] TRACE [Controller id=2] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2020-03-11 15:45:54,621] DEBUG [Controller id=2] Topics not in preferred replica for broker 0 Map(__consumer_offsets-22 -> Vector(0), __consumer_offsets-30 -> Vector(0), __consumer_offsets-8 -> Vector(0), __consumer_offsets-21 -> Vector(0), __consumer_offsets-4 -> Vector(0), __consumer_offsets-27 -> Vector(0), __consumer_offsets-7 -> Vector(0), __consumer_offsets-9 -> Vector(0), __consumer_offsets-46 -> Vector(0), __consumer_offsets-25 -> Vector(0), __consumer_offsets-35 -> Vector(0), __consumer_offsets-41 -> Vector(0), __consumer_offsets-33 -> Vector(0), __consumer_offsets-23 -> Vector(0), __consumer_offsets-49 -> Vector(0), __consumer_offsets-47 -> Vector(0), __consumer_offsets-16 -> Vector(0), test-0 -> Vector(0), __consumer_offsets-28 -> Vector(0), __consumer_offsets-31 -> Vector(0), __consumer_offsets-36 -> Vector(0), __consumer_offsets-42 -> Vector(0), connect-test-0 -> Vector(0), __consumer_offsets-3 -> Vector(0), __consumer_offsets-18 -> Vector(0), __consumer_offsets-37 -> Vector(0), __consumer_offsets-15 -> Vector(0), __consumer_offsets-24 -> Vector(0), __consumer_offsets-38 -> Vector(0), __consumer_offsets-17 -> Vector(0), __consumer_offsets-48 -> Vector(0), __consumer_offsets-19 -> Vector(0), __consumer_offsets-11 -> Vector(0), __consumer_offsets-13 -> Vector(0), __consumer_offsets-2 -> Vector(0), __consumer_offsets-43 -> Vector(0), __consumer_offsets-6 -> Vector(0), __consumer_offsets-14 -> Vector(0), __consumer_offsets-20 -> Vector(0), __consumer_offsets-0 -> Vector(0), __consumer_offsets-44 -> Vector(0), __consumer_offsets-39 -> Vector(0), __consumer_offsets-12 -> Vector(0), __consumer_offsets-45 -> Vector(0), __consumer_offsets-1 -> Vector(0), __consumer_offsets-5 -> Vector(0), __consumer_offsets-26 -> Vector(0), __consumer_offsets-29 -> Vector(0), __consumer_offsets-34 -> Vector(0), __consumer_offsets-10 -> Vector(0), __consumer_offsets-32 -> Vector(0), __consumer_offsets-40 -> Vector(0)) (kafka.controller.KafkaController)
[2020-03-11 15:45:54,621] TRACE [Controller id=2] Leader imbalance ratio for broker 0 is 1.0 (kafka.controller.KafkaController)
[2020-03-11 15:45:54,623] INFO [Controller id=2] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2020-03-11 15:46:44,296] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-03-11 15:46:44,332] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 3 and epoch zk version is now 3 (kafka.controller.KafkaController)
[2020-03-11 15:46:44,333] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2020-03-11 15:46:44,338] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2020-03-11 15:46:44,345] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2020-03-11 15:46:44,349] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2020-03-11 15:46:44,385] INFO [Controller id=0] Initialized broker epochs cache: Map(0 -> 286) (kafka.controller.KafkaController)
[2020-03-11 15:46:44,418] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2020-03-11 15:46:44,498] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2020-03-11 15:46:44,527] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2020-03-11 15:46:44,528] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2020-03-11 15:46:44,529] INFO [Controller id=0] Currently shutting brokers in the cluster: Set() (kafka.controller.KafkaController)
[2020-03-11 15:46:44,529] INFO [Controller id=0] Current list of topics in the cluster: Set(connect-test, test, my-replicated-topic, __consumer_offsets) (kafka.controller.KafkaController)
[2020-03-11 15:46:44,530] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2020-03-11 15:46:44,556] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2020-03-11 15:46:44,557] INFO [Controller id=0] List of topics ineligible for deletion: my-replicated-topic (kafka.controller.KafkaController)
[2020-03-11 15:46:44,557] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2020-03-11 15:46:44,558] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(), initial ineligible deletions: Set(my-replicated-topic) (kafka.controller.TopicDeletionManager)
[2020-03-11 15:46:44,560] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2020-03-11 15:46:44,587] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2020-03-11 15:46:44,592] INFO [RequestSendThread controllerId=0] Controller 0 connected to x240:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-03-11 15:46:44,610] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-03-11 15:46:44,756] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2020-03-11 15:46:44,816] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> Map([Topic=__consumer_offsets,Partition=21,Replica=0] -> OnlineReplica, [Topic=my-replicated-topic,Partition=0,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=42,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=46,Replica=0] -> OnlineReplica, [Topic=my-replicated-topic,Partition=0,Replica=2] -> OfflineReplica, [Topic=my-replicated-topic,Partition=0,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=39,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=7,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=13,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=49,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=48,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=15,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=38,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=2,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=28,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=23,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=32,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=10,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=18,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=33,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=5,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=17,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=8,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=19,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=37,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=43,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=6,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=9,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=30,Replica=0] -> OnlineReplica, [Topic=connect-test,Partition=0,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=3,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=25,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=47,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=36,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=11,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=34,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=27,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=12,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=44,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=1,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=45,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=24,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=22,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=0,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=31,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=14,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=40,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=4,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=20,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=41,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=26,Replica=0] -> OnlineReplica, [Topic=test,Partition=0,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=29,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=16,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=35,Replica=0] -> OnlineReplica) (kafka.controller.ZkReplicaStateMachine)
[2020-03-11 15:46:44,817] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2020-03-11 15:46:44,826] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2020-03-11 15:46:45,066] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> Map(__consumer_offsets-49 -> OnlinePartition, __consumer_offsets-38 -> OnlinePartition, __consumer_offsets-16 -> OnlinePartition, __consumer_offsets-27 -> OnlinePartition, __consumer_offsets-8 -> OnlinePartition, __consumer_offsets-19 -> OnlinePartition, __consumer_offsets-13 -> OnlinePartition, __consumer_offsets-2 -> OnlinePartition, __consumer_offsets-46 -> OnlinePartition, __consumer_offsets-35 -> OnlinePartition, __consumer_offsets-24 -> OnlinePartition, __consumer_offsets-5 -> OnlinePartition, __consumer_offsets-43 -> OnlinePartition, __consumer_offsets-32 -> OnlinePartition, __consumer_offsets-21 -> OnlinePartition, __consumer_offsets-10 -> OnlinePartition, __consumer_offsets-37 -> OnlinePartition, my-replicated-topic-0 -> OfflinePartition, __consumer_offsets-48 -> OnlinePartition, __consumer_offsets-40 -> OnlinePartition, __consumer_offsets-18 -> OnlinePartition, __consumer_offsets-29 -> OnlinePartition, __consumer_offsets-7 -> OnlinePartition, __consumer_offsets-34 -> OnlinePartition, __consumer_offsets-23 -> OnlinePartition, __consumer_offsets-45 -> OnlinePartition, __consumer_offsets-26 -> OnlinePartition, __consumer_offsets-4 -> OnlinePartition, __consumer_offsets-15 -> OnlinePartition, __consumer_offsets-42 -> OnlinePartition, __consumer_offsets-31 -> OnlinePartition, __consumer_offsets-9 -> OnlinePartition, __consumer_offsets-20 -> OnlinePartition, test-0 -> OnlinePartition, __consumer_offsets-12 -> OnlinePartition, __consumer_offsets-1 -> OnlinePartition, __consumer_offsets-28 -> OnlinePartition, __consumer_offsets-17 -> OnlinePartition, __consumer_offsets-6 -> OnlinePartition, __consumer_offsets-39 -> OnlinePartition, __consumer_offsets-44 -> OnlinePartition, __consumer_offsets-36 -> OnlinePartition, __consumer_offsets-47 -> OnlinePartition, __consumer_offsets-3 -> OnlinePartition, __consumer_offsets-25 -> OnlinePartition, __consumer_offsets-14 -> OnlinePartition, __consumer_offsets-30 -> OnlinePartition, __consumer_offsets-41 -> OnlinePartition, connect-test-0 -> OnlinePartition, __consumer_offsets-33 -> OnlinePartition, __consumer_offsets-22 -> OnlinePartition, __consumer_offsets-11 -> OnlinePartition, __consumer_offsets-0 -> OnlinePartition) (kafka.controller.ZkPartitionStateMachine)
[2020-03-11 15:46:45,067] INFO [Controller id=0] Ready to serve as the new controller with epoch 3 (kafka.controller.KafkaController)
[2020-03-11 15:46:45,074] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2020-03-11 15:46:45,074] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2020-03-11 15:46:45,075] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2020-03-11 15:46:45,076] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2020-03-11 15:46:45,079] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2020-03-11 15:46:45,093] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2020-03-11 15:46:50,095] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-03-11 15:46:50,096] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-03-11 15:46:50,105] DEBUG [Controller id=0] Preferred replicas by broker Map(2 -> Map(my-replicated-topic-0 -> Vector(2, 1, 0)), 0 -> Map(__consumer_offsets-22 -> Vector(0), __consumer_offsets-30 -> Vector(0), __consumer_offsets-8 -> Vector(0), __consumer_offsets-21 -> Vector(0), __consumer_offsets-4 -> Vector(0), __consumer_offsets-27 -> Vector(0), __consumer_offsets-7 -> Vector(0), __consumer_offsets-9 -> Vector(0), __consumer_offsets-46 -> Vector(0), __consumer_offsets-25 -> Vector(0), __consumer_offsets-35 -> Vector(0), __consumer_offsets-41 -> Vector(0), __consumer_offsets-33 -> Vector(0), __consumer_offsets-23 -> Vector(0), __consumer_offsets-49 -> Vector(0), __consumer_offsets-47 -> Vector(0), __consumer_offsets-16 -> Vector(0), test-0 -> Vector(0), __consumer_offsets-28 -> Vector(0), __consumer_offsets-31 -> Vector(0), __consumer_offsets-36 -> Vector(0), __consumer_offsets-42 -> Vector(0), connect-test-0 -> Vector(0), __consumer_offsets-3 -> Vector(0), __consumer_offsets-18 -> Vector(0), __consumer_offsets-37 -> Vector(0), __consumer_offsets-15 -> Vector(0), __consumer_offsets-24 -> Vector(0), __consumer_offsets-38 -> Vector(0), __consumer_offsets-17 -> Vector(0), __consumer_offsets-48 -> Vector(0), __consumer_offsets-19 -> Vector(0), __consumer_offsets-11 -> Vector(0), __consumer_offsets-13 -> Vector(0), __consumer_offsets-2 -> Vector(0), __consumer_offsets-43 -> Vector(0), __consumer_offsets-6 -> Vector(0), __consumer_offsets-14 -> Vector(0), __consumer_offsets-20 -> Vector(0), __consumer_offsets-0 -> Vector(0), __consumer_offsets-44 -> Vector(0), __consumer_offsets-39 -> Vector(0), __consumer_offsets-12 -> Vector(0), __consumer_offsets-45 -> Vector(0), __consumer_offsets-1 -> Vector(0), __consumer_offsets-5 -> Vector(0), __consumer_offsets-26 -> Vector(0), __consumer_offsets-29 -> Vector(0), __consumer_offsets-34 -> Vector(0), __consumer_offsets-10 -> Vector(0), __consumer_offsets-32 -> Vector(0), __consumer_offsets-40 -> Vector(0))) (kafka.controller.KafkaController)
[2020-03-11 15:46:50,108] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 Map(my-replicated-topic-0 -> Vector(2, 1, 0)) (kafka.controller.KafkaController)
[2020-03-11 15:46:50,109] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2020-03-11 15:46:50,110] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2020-03-11 15:46:50,110] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-03-11 15:46:50,110] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-03-11 15:49:18,711] INFO [Controller id=0] New topics: [Set(streams-plaintext-input)], deleted topics: [Set()], new partition replica assignment [Map(streams-plaintext-input-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2020-03-11 15:49:18,711] INFO [Controller id=0] New partition creation callback for streams-plaintext-input-0 (kafka.controller.KafkaController)
[2020-03-11 15:49:32,001] INFO [Controller id=0] New topics: [Set(streams-wordcount-output)], deleted topics: [Set()], new partition replica assignment [Map(streams-wordcount-output-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2020-03-11 15:49:32,001] INFO [Controller id=0] New partition creation callback for streams-wordcount-output-0 (kafka.controller.KafkaController)
[2020-03-11 15:51:50,111] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-03-11 15:51:50,111] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-03-11 15:51:50,116] DEBUG [Controller id=0] Preferred replicas by broker Map(2 -> Map(my-replicated-topic-0 -> Vector(2, 1, 0)), 0 -> Map(streams-plaintext-input-0 -> Vector(0), __consumer_offsets-22 -> Vector(0), __consumer_offsets-30 -> Vector(0), __consumer_offsets-8 -> Vector(0), __consumer_offsets-21 -> Vector(0), __consumer_offsets-4 -> Vector(0), __consumer_offsets-27 -> Vector(0), __consumer_offsets-7 -> Vector(0), __consumer_offsets-9 -> Vector(0), __consumer_offsets-46 -> Vector(0), __consumer_offsets-25 -> Vector(0), __consumer_offsets-35 -> Vector(0), __consumer_offsets-41 -> Vector(0), __consumer_offsets-33 -> Vector(0), __consumer_offsets-23 -> Vector(0), __consumer_offsets-49 -> Vector(0), __consumer_offsets-47 -> Vector(0), __consumer_offsets-16 -> Vector(0), test-0 -> Vector(0), __consumer_offsets-28 -> Vector(0), __consumer_offsets-31 -> Vector(0), __consumer_offsets-36 -> Vector(0), __consumer_offsets-42 -> Vector(0), connect-test-0 -> Vector(0), __consumer_offsets-3 -> Vector(0), __consumer_offsets-18 -> Vector(0), __consumer_offsets-37 -> Vector(0), __consumer_offsets-15 -> Vector(0), __consumer_offsets-24 -> Vector(0), __consumer_offsets-38 -> Vector(0), __consumer_offsets-17 -> Vector(0), __consumer_offsets-48 -> Vector(0), __consumer_offsets-19 -> Vector(0), __consumer_offsets-11 -> Vector(0), streams-wordcount-output-0 -> Vector(0), __consumer_offsets-13 -> Vector(0), __consumer_offsets-2 -> Vector(0), __consumer_offsets-43 -> Vector(0), __consumer_offsets-6 -> Vector(0), __consumer_offsets-14 -> Vector(0), __consumer_offsets-20 -> Vector(0), __consumer_offsets-0 -> Vector(0), __consumer_offsets-44 -> Vector(0), __consumer_offsets-39 -> Vector(0), __consumer_offsets-12 -> Vector(0), __consumer_offsets-45 -> Vector(0), __consumer_offsets-1 -> Vector(0), __consumer_offsets-5 -> Vector(0), __consumer_offsets-26 -> Vector(0), __consumer_offsets-29 -> Vector(0), __consumer_offsets-34 -> Vector(0), __consumer_offsets-10 -> Vector(0), __consumer_offsets-32 -> Vector(0), __consumer_offsets-40 -> Vector(0))) (kafka.controller.KafkaController)
[2020-03-11 15:51:50,117] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 Map(my-replicated-topic-0 -> Vector(2, 1, 0)) (kafka.controller.KafkaController)
[2020-03-11 15:51:50,117] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2020-03-11 15:51:50,117] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2020-03-11 15:51:50,117] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-03-11 15:51:50,117] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-03-11 15:55:16,768] DEBUG [Controller id=0] Delete topics listener fired for topics my-replicated-topic to be deleted (kafka.controller.KafkaController)
[2020-03-11 15:55:16,768] INFO [Controller id=0] Starting topic deletion for topics my-replicated-topic (kafka.controller.KafkaController)
[2020-03-11 15:55:16,769] INFO [Topic Deletion Manager 0] Handling deletion for topics my-replicated-topic (kafka.controller.TopicDeletionManager)
[2020-03-11 15:55:16,771] INFO [Topic Deletion Manager 0] Deletion of topic my-replicated-topic (re)started (kafka.controller.TopicDeletionManager)
[2020-03-11 15:55:16,772] INFO [Topic Deletion Manager 0] Topic deletion callback for my-replicated-topic (kafka.controller.TopicDeletionManager)
[2020-03-11 15:55:16,780] INFO [Topic Deletion Manager 0] Partition deletion callback for my-replicated-topic-0 (kafka.controller.TopicDeletionManager)
[2020-03-11 15:55:16,794] DEBUG The stop replica request (delete = false) sent to broker 0 is StopReplicaRequestInfo([Topic=my-replicated-topic,Partition=0,Replica=0],false) (kafka.controller.ControllerBrokerRequestBatch)
[2020-03-11 15:55:16,796] DEBUG [Topic Deletion Manager 0] Deletion started for replicas [Topic=my-replicated-topic,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-03-11 15:55:16,798] DEBUG The stop replica request (delete = true) sent to broker 0 is StopReplicaRequestInfo([Topic=my-replicated-topic,Partition=0,Replica=0],true) (kafka.controller.ControllerBrokerRequestBatch)
[2020-03-11 15:55:16,799] DEBUG [Topic Deletion Manager 0] Dead Replicas ([Topic=my-replicated-topic,Partition=0,Replica=2],[Topic=my-replicated-topic,Partition=0,Replica=1]) found for topic my-replicated-topic (kafka.controller.TopicDeletionManager)
[2020-03-11 15:55:16,801] INFO [Topic Deletion Manager 0] Halted deletion of topics my-replicated-topic due to offline replicas (kafka.controller.TopicDeletionManager)
[2020-03-11 15:55:16,838] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 0: request error = NONE, partition errors = Map(my-replicated-topic-0 -> NONE) (kafka.controller.KafkaController)
[2020-03-11 15:55:16,842] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=my-replicated-topic,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-03-11 15:55:16,844] INFO [Topic Deletion Manager 0] Handling deletion for topics my-replicated-topic (kafka.controller.TopicDeletionManager)
[2020-03-11 15:55:16,845] INFO [Topic Deletion Manager 0] Retrying deletion of topic my-replicated-topic since replicas [Topic=my-replicated-topic,Partition=0,Replica=2],[Topic=my-replicated-topic,Partition=0,Replica=1] were not successfully deleted (kafka.controller.TopicDeletionManager)
[2020-03-11 15:56:50,118] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2020-03-11 15:56:50,118] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-03-11 15:56:50,123] DEBUG [Controller id=0] Preferred replicas by broker Map(0 -> Map(streams-plaintext-input-0 -> Vector(0), __consumer_offsets-22 -> Vector(0), __consumer_offsets-30 -> Vector(0), __consumer_offsets-8 -> Vector(0), __consumer_offsets-21 -> Vector(0), __consumer_offsets-4 -> Vector(0), __consumer_offsets-27 -> Vector(0), __consumer_offsets-7 -> Vector(0), __consumer_offsets-9 -> Vector(0), __consumer_offsets-46 -> Vector(0), __consumer_offsets-25 -> Vector(0), __consumer_offsets-35 -> Vector(0), __consumer_offsets-41 -> Vector(0), __consumer_offsets-33 -> Vector(0), __consumer_offsets-23 -> Vector(0), __consumer_offsets-49 -> Vector(0), __consumer_offsets-47 -> Vector(0), __consumer_offsets-16 -> Vector(0), test-0 -> Vector(0), __consumer_offsets-28 -> Vector(0), __consumer_offsets-31 -> Vector(0), __consumer_offsets-36 -> Vector(0), __consumer_offsets-42 -> Vector(0), connect-test-0 -> Vector(0), __consumer_offsets-3 -> Vector(0), __consumer_offsets-18 -> Vector(0), __consumer_offsets-37 -> Vector(0), __consumer_offsets-15 -> Vector(0), __consumer_offsets-24 -> Vector(0), __consumer_offsets-38 -> Vector(0), __consumer_offsets-17 -> Vector(0), __consumer_offsets-48 -> Vector(0), __consumer_offsets-19 -> Vector(0), __consumer_offsets-11 -> Vector(0), streams-wordcount-output-0 -> Vector(0), __consumer_offsets-13 -> Vector(0), __consumer_offsets-2 -> Vector(0), __consumer_offsets-43 -> Vector(0), __consumer_offsets-6 -> Vector(0), __consumer_offsets-14 -> Vector(0), __consumer_offsets-20 -> Vector(0), __consumer_offsets-0 -> Vector(0), __consumer_offsets-44 -> Vector(0), __consumer_offsets-39 -> Vector(0), __consumer_offsets-12 -> Vector(0), __consumer_offsets-45 -> Vector(0), __consumer_offsets-1 -> Vector(0), __consumer_offsets-5 -> Vector(0), __consumer_offsets-26 -> Vector(0), __consumer_offsets-29 -> Vector(0), __consumer_offsets-34 -> Vector(0), __consumer_offsets-10 -> Vector(0), __consumer_offsets-32 -> Vector(0), __consumer_offsets-40 -> Vector(0))) (kafka.controller.KafkaController)
[2020-03-11 15:56:50,124] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-03-11 15:56:50,124] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-03-11 15:57:33,651] DEBUG [Controller id=0] Delete topics listener fired for topics connect-test,my-replicated-topic to be deleted (kafka.controller.KafkaController)
[2020-03-11 15:57:33,652] INFO [Controller id=0] Starting topic deletion for topics connect-test,my-replicated-topic (kafka.controller.KafkaController)
[2020-03-11 15:57:33,652] INFO [Topic Deletion Manager 0] Handling deletion for topics my-replicated-topic,connect-test (kafka.controller.TopicDeletionManager)
[2020-03-11 15:57:33,653] INFO [Topic Deletion Manager 0] Deletion of topic connect-test (re)started (kafka.controller.TopicDeletionManager)
[2020-03-11 15:57:33,653] INFO [Topic Deletion Manager 0] Topic deletion callback for connect-test (kafka.controller.TopicDeletionManager)
[2020-03-11 15:57:33,655] INFO [Topic Deletion Manager 0] Partition deletion callback for connect-test-0 (kafka.controller.TopicDeletionManager)
[2020-03-11 15:57:33,667] DEBUG The stop replica request (delete = false) sent to broker 0 is StopReplicaRequestInfo([Topic=connect-test,Partition=0,Replica=0],false) (kafka.controller.ControllerBrokerRequestBatch)
[2020-03-11 15:57:33,667] DEBUG [Topic Deletion Manager 0] Deletion started for replicas [Topic=connect-test,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-03-11 15:57:33,667] DEBUG The stop replica request (delete = true) sent to broker 0 is StopReplicaRequestInfo([Topic=connect-test,Partition=0,Replica=0],true) (kafka.controller.ControllerBrokerRequestBatch)
[2020-03-11 15:57:33,697] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 0: request error = NONE, partition errors = Map(connect-test-0 -> NONE) (kafka.controller.KafkaController)
[2020-03-11 15:57:33,698] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=connect-test,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-03-11 15:57:33,698] INFO [Topic Deletion Manager 0] Handling deletion for topics my-replicated-topic,connect-test (kafka.controller.TopicDeletionManager)
[2020-03-11 15:57:33,737] INFO [Topic Deletion Manager 0] Deletion of topic connect-test successfully completed (kafka.controller.TopicDeletionManager)
[2020-03-11 15:57:33,740] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2020-03-11 15:57:33,741] DEBUG [Controller id=0] Delete topics listener fired for topics my-replicated-topic to be deleted (kafka.controller.KafkaController)
[2020-03-11 15:57:33,741] INFO [Controller id=0] Starting topic deletion for topics my-replicated-topic (kafka.controller.KafkaController)
[2020-03-11 15:57:33,741] INFO [Topic Deletion Manager 0] Handling deletion for topics my-replicated-topic (kafka.controller.TopicDeletionManager)
[2020-03-11 15:57:40,449] DEBUG [Controller id=0] Delete topics listener fired for topics test,my-replicated-topic to be deleted (kafka.controller.KafkaController)
[2020-03-11 15:57:40,449] INFO [Controller id=0] Starting topic deletion for topics test,my-replicated-topic (kafka.controller.KafkaController)
[2020-03-11 15:57:40,449] INFO [Topic Deletion Manager 0] Handling deletion for topics my-replicated-topic,test (kafka.controller.TopicDeletionManager)
[2020-03-11 15:57:40,450] INFO [Topic Deletion Manager 0] Deletion of topic test (re)started (kafka.controller.TopicDeletionManager)
[2020-03-11 15:57:40,450] INFO [Topic Deletion Manager 0] Topic deletion callback for test (kafka.controller.TopicDeletionManager)
[2020-03-11 15:57:40,451] INFO [Topic Deletion Manager 0] Partition deletion callback for test-0 (kafka.controller.TopicDeletionManager)
[2020-03-11 15:57:40,459] DEBUG The stop replica request (delete = false) sent to broker 0 is StopReplicaRequestInfo([Topic=test,Partition=0,Replica=0],false) (kafka.controller.ControllerBrokerRequestBatch)
[2020-03-11 15:57:40,459] DEBUG [Topic Deletion Manager 0] Deletion started for replicas [Topic=test,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-03-11 15:57:40,460] DEBUG The stop replica request (delete = true) sent to broker 0 is StopReplicaRequestInfo([Topic=test,Partition=0,Replica=0],true) (kafka.controller.ControllerBrokerRequestBatch)
[2020-03-11 15:57:40,484] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 0: request error = NONE, partition errors = Map(test-0 -> NONE) (kafka.controller.KafkaController)
[2020-03-11 15:57:40,484] DEBUG [Topic Deletion Manager 0] Deletion successfully completed for replicas [Topic=test,Partition=0,Replica=0] (kafka.controller.TopicDeletionManager)
[2020-03-11 15:57:40,485] INFO [Topic Deletion Manager 0] Handling deletion for topics my-replicated-topic,test (kafka.controller.TopicDeletionManager)
[2020-03-11 15:57:40,514] INFO [Topic Deletion Manager 0] Deletion of topic test successfully completed (kafka.controller.TopicDeletionManager)
[2020-03-11 15:57:40,516] INFO [Controller id=0] New topics: [Set()], deleted topics: [Set()], new partition replica assignment [Map()] (kafka.controller.KafkaController)
[2020-03-11 15:57:40,518] DEBUG [Controller id=0] Delete topics listener fired for topics my-replicated-topic to be deleted (kafka.controller.KafkaController)
[2020-03-11 15:57:40,518] INFO [Controller id=0] Starting topic deletion for topics my-replicated-topic (kafka.controller.KafkaController)
[2020-03-11 15:57:40,518] INFO [Topic Deletion Manager 0] Handling deletion for topics my-replicated-topic (kafka.controller.TopicDeletionManager)
[2020-03-11 15:59:32,976] INFO [Controller id=0] New topics: [Set(streams-wordcount-KSTREAM-AGGREGATE-STATE-STORE-0000000003-repartition)], deleted topics: [Set()], new partition replica assignment [Map(streams-wordcount-KSTREAM-AGGREGATE-STATE-STORE-0000000003-repartition-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2020-03-11 15:59:32,976] INFO [Controller id=0] New partition creation callback for streams-wordcount-KSTREAM-AGGREGATE-STATE-STORE-0000000003-repartition-0 (kafka.controller.KafkaController)
[2020-03-11 15:59:33,041] INFO [Controller id=0] New topics: [Set(streams-wordcount-KSTREAM-AGGREGATE-STATE-STORE-0000000003-changelog)], deleted topics: [Set()], new partition replica assignment [Map(streams-wordcount-KSTREAM-AGGREGATE-STATE-STORE-0000000003-changelog-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))] (kafka.controller.KafkaController)
[2020-03-11 15:59:33,041] INFO [Controller id=0] New partition creation callback for streams-wordcount-KSTREAM-AGGREGATE-STATE-STORE-0000000003-changelog-0 (kafka.controller.KafkaController)
